#CATEGORY "4" // Device Interface
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
#ENCODING_ASCII

#USER_SIMPLSHARP_LIBRARY "ProwlSimplSharp"
#DEFINE_CONSTANT MAX_API_KEYS 10

#HELP_BEGIN
Simpl Windows Name: Prowl Client

Summary: Send custom Prowl messages to iOS devices and programs listed at www.prowlapp.com/apps.php
Minimum Firmware: 3-Series(v1.007.0019+)


SETUP:	

1. Go to 'www.prowlapp.com'
2. Create a unique login for each client project.
3. Go to the "API Key" tab and generate a new API key.
4. Copy your 40 digit API Key and paste to this modules parameter field.
5. Install any Prowl compatible apps, plugins and/or services from the website.
6. Use the same unique login from Step 2.

TIPS: 

1. Go to iOS settings > Notifications > Prowl > Alert Style. Change to 'Alerts'.
2. Go to the Prowl App settings in the iOS app and turn on 'Absolute Timestamps'.
3. A priority level of 2 will bypass Quiet Hours in settings.

NOTES: The 'Description$' SERIAL input is optional and will produce a different alert styles.  Without
a Description$, the Application$ will be on Line 1 and the Event$ will be on Line 2.  With a Description$,
the Application$ and Event$ will be on Line 1 with a '-' separating them and Description$ will be on Line 2.


INPUT DESCRIPTIONS:

NAME            TYPE    DESCRIPTION
Send             D      Pulse to transmit current message to enabled keys.
Priority         A      [OPTIONAL] Range from (0d to 2d)
Application$     S      Name of Application sending the message
Event$           S      Name of Event
Description$     S      [OPTIONAL] See Description...
URL$             S      [OPTIONAL] A webpage link or iOS app handle i.e. 'Crestron://'

EnableKey[x]     D      Rising edge Adds ApiKeys[x], Falling edge removes ApiKeys[x] (Only ApiKeys that are enabled will be sent.)
                       

OUTPUT DESCRIPTIONS:

NAME            TYPE    DESCRIPTION
Status           A      [OPTIONAL] Errorcode per prowl API
Status_Message$  S      [OPTIONAL] Verbose Errorcode descriptions per prowl API 
   

PARAMETER DESCRIPTIONS:

NAME            TYPE    DESCRIPTION	
ApiKeys          S      40 digit hex API Key from www.prowlapp.com

#HELP_END



DIGITAL_INPUT _SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_, _SKIP_,_SKIP_, Send, _skip_;
ANALOG_INPUT Priority;

STRING_INPUT _skip_,Application$[256], Url$[512], Event$[1024], Description$[1000];

DIGITAL_INPUT EnableKey[MAX_API_KEYS], _SKIP_;


ANALOG_OUTPUT 	_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_,_SKIP_, _SKIP_,_SKIP_, Status;
STRING_OUTPUT 	Status_Message$;

STRING_PARAMETER  ApiKeys[MAX_API_KEYS][40];

ProwlClient prowl;
 

function AddApiKey(integer index)
{
	if(isParameterDefined(ApiKeys[index]))
	{
		prowl.AddApiKey(ApiKeys[index]);
	}
}


function RemoveApiKey(integer index)
{
	if(isParameterDefined(ApiKeys[index]))
	{
		prowl.RemoveApiKey(ApiKeys[index]);
	}
}

push EnableKey
{
	integer index;
	
	index = GetLastModifiedArrayIndex();
	AddApiKey(index);
}


release EnableKey
{
	integer index;
	
	index = GetLastModifiedArrayIndex();	
	RemoveApiKey(index);
}
  

push Send
{
	integer status;
	
	status = prowl.Send(Application$, Priority, URL$, Event$, Description$);
	
	cswitch(status)
	{
		case( -1): {Status_Message$ = "Must add at least one key!"; break; }
		case(  0): {Status_Message$ = "Connection Error."; break; }  
		case(200): {Status_Message$ = "Success!"; break;}
		case(400): {Status_Message$ = "Bad request, the parameters you provided did not validate."; break;}
		case(401): {Status_Message$ = "Not authorized, the API key given is not valid, and does not correspond to a user."; break;}
		case(406): {Status_Message$ = "Not acceptable, your IP address has exceeded the API limit."; break;}
		case(409): {Status_Message$ = "Not approved, the user has yet to approve your retrieve request."; break;}
		case(500): {Status_Message$ = "Internal server error, something failed to execute properly on the Prowl side."; break;}
	}
}

function main()
{
	WaitForInitializationComplete();
}

